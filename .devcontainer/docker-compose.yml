services:
  app:
    build:
      context: ..
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    volumes:
      - ../src:/workspaces/botforge-rag/src:cached
      - ../tests:/workspaces/botforge-rag/tests:cached
      - ../.env:/workspaces/botforge-rag/.env
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql://postgres:password@db:5432/botforge_dev
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    working_dir: /workspaces/botforge-rag

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: botforge_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../create.sql:/docker-entrypoint-initdb.d/create.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d botforge_dev"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres_data:
  redis_data:
